error[E0277]: the trait bound `for<'a> NoSerde: serde::de::Deserialize<'a>` is not satisfied
 --> tests/trybuild/fail_missing_serde.rs:8:8
  |
8 | struct NoSerde {
  |        ^^^^^^^ the trait `for<'a> serde::de::Deserialize<'a>` is not implemented for `NoSerde`
  |
  = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `NoSerde` type
  = note: for types from other crates check whether the crate offers a `serde` feature flag
  = help: the following other types implement trait `serde::de::Deserialize<'de>`:
            &'a Path
            &'a [u8]
            &'a str
            ()
            (T,)
            (T0, T1)
            (T0, T1, T2)
            (T0, T1, T2, T3)
          and $N others
note: required by a bound in `ai_json_template::AiJsonTemplate`
 --> $WORKSPACE/ai-json-template/src/lib.rs
  |
  | pub trait AiJsonTemplate: serde::Serialize + for<'a> serde::Deserialize<'a> {
  |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `AiJsonTemplate`
  = note: `AiJsonTemplate` is a "sealed trait", because to implement it you also need to implement `serde::de::Deserialize`, which is not accessible; this is usually done to force you to use one of the provided types that already implement it
  = help: the following types implement the trait:
            serde::de::ignored_any::IgnoredAny
            ()
            bool
            i8
            std::num::NonZero<i8>
            std::num::NonZero<i16>
            std::num::NonZero<i32>
            std::num::NonZero<i64>
          and $N others

error[E0277]: the trait bound `NoSerde: serde::ser::Serialize` is not satisfied
 --> tests/trybuild/fail_missing_serde.rs:8:8
  |
8 | struct NoSerde {
  |        ^^^^^^^ the trait `serde::ser::Serialize` is not implemented for `NoSerde`
  |
  = note: for local types consider adding `#[derive(serde::Serialize)]` to your `NoSerde` type
  = note: for types from other crates check whether the crate offers a `serde` feature flag
  = help: the following other types implement trait `serde::ser::Serialize`:
            &'a T
            &'a mut T
            ()
            (T,)
            (T0, T1)
            (T0, T1, T2)
            (T0, T1, T2, T3)
            (T0, T1, T2, T3, T4)
          and $N others
note: required by a bound in `ai_json_template::AiJsonTemplate`
 --> $WORKSPACE/ai-json-template/src/lib.rs
  |
  | pub trait AiJsonTemplate: serde::Serialize + for<'a> serde::Deserialize<'a> {
  |                           ^^^^^^^^^^^^^^^^ required by this bound in `AiJsonTemplate`
  = note: `AiJsonTemplate` is a "sealed trait", because to implement it you also need to implement `serde::ser::Serialize`, which is not accessible; this is usually done to force you to use one of the provided types that already implement it
  = help: the following types implement the trait:
            bool
            isize
            i8
            i16
            i32
            i64
            i128
            usize
          and $N others
